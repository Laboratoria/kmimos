 
.row
  .col-md-12
    %h2.title-step Detalles del Ciudador
    %hr
.row
  .col-md-1
  .col-md-10
    .row
      .col-md-3 Descripción como cuidador:
      .col-md-9= f.input :description, label: false, input_html: {rows: 10}  
    .row
      .col-md-12 Precio por noche: 
    .row
      .col-md-12
      
        - @provider.rates.each do |rate| 
          .row
            .col-md-8
              %label= rate.size
              %input{value: rate.id}(name="provider[rates_attributes][][id]" type="hidden")
              %input{value: rate.size.id}(name="provider[rates_attributes][][size_id]" type="hidden")
            .col-md-4
              %input{value: rate.price}(name="provider[rates_attributes][][price]" placeholder="0.0" class="form-control")
        
    %br
    .row
      %label ¿En qué municipios puedes trabajar?
      
    - current_country.states.each do |state|
      .row.border-bottom
        .col-md-1
          %input{type: 'checkbox'}
        .col-md-10=state.name
        .col-md-1
          %a.btn.btn-default.btn-xs{href: "javascript:select_state(" + state.id.to_s + ")"}
            = "-"
    
    - current_country.states.each do |state|
      .div{class: "state_#{state.id} row", style: "display: none;"}
        .col-md-12
          %label= state
          .tricol_checkboxes= f.association :localizations, as: :check_boxes, label: false, :collection => state.locations
    .row
      .col-md-6 Años de experiencia cuidando perros
      .col-md-2= f.input :experiencia, label: false
      .col-md-4 Años
    .row
      .col-md-3 Tipo de Propiedad: 
      .col-md-9= f.association :property, label: false
    .row
      .col-md-12.tricol_checkboxes
        %label ¿Con que tamaños de perro trabaja? 
        = f.association :sizes, as: :check_boxes, label: false  
    .row
      .col-md-12.tricol_checkboxes
        %label Etapas de vida de los perros que cuida 
        = f.association :agings, as: :check_boxes, label: false
    .row
      .col-md-12 Comportamiento de perros aceptados
    .row
      .col-md-12.tricol_checkboxes= f.association :accepted_behaviors, as: :check_boxes, label: false, :collection => Behavior.all
    .row
      .col-md-12
        .map-info
          = f.input :latitude, as: :hidden
          = f.input :longitude, as: :hidden
    .row
      .col-md-9
        = f.input :address, label: "Dirección:", placeholder: "Ingrese su dirección...", hint: "*Si el pin no se sitúa en el lugar de tu dirección, por favor ajústalo.", input_html: {:onchange=>"codeAddress()"}
      .col-md-3
        %label{:for => "search_address", :style => "display:block;color:white"} Buscar
        %button#search_address.btn.btn-primary.form-control.ml-0{:name => "search_address", :type => "button"} Buscar 
     
    .row
      .col-md-12 
        #mapNew{style: "width: 100% !important; height: 200px !important; ", latitude: @provider.latitude, longitude: @provider.longitude, zoom: 16 } 
        
      %br
    .row
      .col-md-12 ¿Cuentas con Otros perros en casa?
    .row
      .col-md-4.twocol_checkboxes
        = f.input :has_other_pets, as: :radio_buttons, label: false, :collection => [['Si', 1], ['No', 0]]
      .col-md-4 Numero de perros
      .col-md-4= f.input :number_of_pets, label: false
    .row
      .col-md-12 Tamaño de Perro
    .row
      .col-md-12.tricol_checkboxes= f.association :own_sizes, as: :check_boxes, label: false
    .row
      .col-md-12 Comportamiento de mis perros
    .row
      .col-md-12.tricol_checkboxes= f.association :pet_behaviors, as: :check_boxes, label: false, :collection => Behavior.all
    .row
      .col-md-9 ¿Cantidad de perros aceptado en su propiedad?
      .col-md-3= f.input :pets_allowed, label: false
    .row
      .col-md-8 ¿La propiedad tiene áreas verdes cercanas? 
      .col-md-4.twocol_checkboxes= f.input :has_green, as: :radio_buttons, label: false, :collection => [['Si', 1], ['No', 0]]
    .row
      .col-md-8 ¿La propiedad cuenta con patio? 
      .col-md-4.twocol_checkboxes= f.input :has_yard, as: :radio_buttons, label: false, :collection => [['Si', 1], ['No', 0]]
       
  .col-md-1
  
:javascript
  
  var geocoder = new google.maps.Geocoder();
  
  $("[class^='state_']").hide();
  
  function select_state(id){
    $(".state_" + id).toggle();
  }
  
  var marker_item = $("#marker");
  
  var itemLatLng = {lat: parseFloat(marker_item.attr('latitude')), lng: parseFloat(marker_item.attr('longitude'))};
 
  
  newProviderMap = initMap('editProvider', 'mapNew');
  
  newProviderMap.setCenter(itemLatLng);
   
  var marker = new google.maps.Marker({
      draggable: true,
      position: itemLatLng,
      map: newProviderMap
  });
  
  google.maps.event.addListener(marker,'drag',function(event) {
      $("#provider_latitude").val(event.latLng.lat());
      $("#provider_longitude").val(event.latLng.lng());
  });
  
  function codeAddress() {
    var address = document.getElementById("provider_address").value;
    geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        newProviderMap.setCenter(results[0].geometry.location);
        marker.setPosition( results[0].geometry.location );
        console.log(results[0].geometry.location);
        $("#provider_latitude").val(results[0].geometry.location.lat());
        $("#provider_longitude").val(results[0].geometry.location.lng());
      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
  }
  
  